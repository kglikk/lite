{"version":3,"sources":["C:/Users/VScode/lite/src/app/+data/externalgrids/externalgrids-routing.module.ts","C:/Users/VScode/lite/src/app/+data/externalgrids/externalgrids.component.html","C:/Users/VScode/lite/src/app/+data/externalgrids/externalgrids.component.ts","C:/Users/VScode/lite/src/app/+data/externalgrids/externalgrids.module.ts","C:/Users/VScode/lite/src/app/shared/animations/fade-in-top.decorator.ts"],"names":[],"mappings":"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","file":"2.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ExternalGridsComponent } from \"app/+data/externalgrids/externalgrids.component\";\n\nconst routes: Routes = [{\n  path: '',\n  component: ExternalGridsComponent,\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ExternalGridsRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/VScode/lite/src/app/+data/externalgrids/externalgrids-routing.module.ts","module.exports = \"<!-- MAIN CONTENT -->\\n<div *ngIf=\\\"show;else otherContent\\\" id=\\\"content\\\">\\n\\n  <div class=\\\"row\\\">\\n    <sa-big-breadcrumbs [items]=\\\"['Data', 'External Grids']\\\" icon=\\\"table\\\" class=\\\"col-xs-12 col-sm-7 col-md-7 col-lg-4\\\"></sa-big-breadcrumbs>\\n    <!-- <sa-stats></sa-stats> -->\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class='col-sm-12' style=\\\"margin-top: 10px; margin-bottom: 10px\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=onAddRow()>Add Row</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=removeSelected()>Delete selected</button>\\n    </div>\\n  </div>\\n\\n  <!-- widget grid -->\\n  <sa-widgets-grid>\\n\\n\\n    <div class=\\\"row\\\">\\n      <article class=\\\"col-sm-12\\\">\\n        <sa-widget [editbutton]=\\\"false\\\" color=\\\"darken\\\">\\n          <header>\\n            <span class=\\\"widget-icon\\\">\\n              <i class=\\\"fa fa-table\\\"></i>\\n            </span>\\n\\n            <h2>External Grids</h2>\\n          </header>\\n          <div>\\n            <div class=\\\"widget-body no-padding\\\">\\n              <!-- <alert type=\\\"info\\\" class=\\\"no-margin fade in\\\" dismisser=\\\"\\\"> \\n                <i class=\\\"fa-fw fa fa-info\\\"></i>\\n                Adds zebra-striping to table row within <code>&lt;table&gt;</code> by adding the <code>.table-striped</code>\\n                with the base class\\n              </alert>\\n              -->\\n              <div class=\\\"table-responsive\\\" style=\\\"width: 100%; height: 500px;\\\">\\n                  <ag-grid-angular #agGrid style=\\\"width: 100%;height: 100%;\\\" class=\\\"ag-fresh\\\" [gridOptions]=\\\"gridOptions\\\" [rowData]=\\\"rowData\\\"> \\n                    <!--  [columnDefs]=\\\"columnDefs\\\" [defaultColDef]=\\\"defaultColDef\\\" -->\\n              </ag-grid-angular>\\n\\n               \\n\\n              </div>\\n\\n            </div>\\n          </div>\\n        </sa-widget>\\n\\n      </article>\\n\\n\\n    </div>\\n  \\n  </sa-widgets-grid>\\n</div>\\n\\n<ng-template #otherContent>Please open or create project in the Home tab first</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/VScode/lite/src/app/+data/externalgrids/externalgrids.component.html\n// module id = ../../../../../src/app/+data/externalgrids/externalgrids.component.html\n// module chunks = 2","import { ProjectService } from './../../services/project.service';\nimport { ShowDataService } from 'app/services/show-data.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FadeInTop } from \"../../shared/animations/fade-in-top.decorator\";\n\nimport { Http, Headers } from \"@angular/http\";\nimport { GridOptions } from \"ag-grid/main\";\n\n@FadeInTop()\n@Component({\n  //selector: 'sa-external-grids',\n  templateUrl: './externalgrids.component.html',\n\n})\nexport class ExternalGridsComponent implements OnInit {\n\n  public externalgrid: ExternalGrids[] = [];\n\n  gridOptions: GridOptions;\n  rowData: any[];\n  // @Inject('BASE_URL') baseUrl: string;\n  show: boolean;\n  name: string;\n  projectId: number;\n\n  constructor(public http: Http, public showData: ShowDataService, public projectService: ProjectService) {\n\n    //czy pokazywać dane czy nie w zależności od tego czy projekt jest otwarty\n    this.showData.currentShow.subscribe(show => this.show = show);\n\n    //this.projectService.currentProjectName.subscribe(name => this.name = name)\n    \n    //obserwuj ID projektu, który jest otwarty, żeby na tej podstawie wczytywać dane\n    this.projectService.currentProjectId.subscribe(projectId => this.projectId = projectId)\n    let projectIdInside = this.projectId;\n    // we pass an empty gridOptions in, so we can grab the api out\n    this.gridOptions = <GridOptions>{\n\n      onGridReady: () => {\n        this.gridOptions.api.sizeColumnsToFit(); //make the currently visible columns fit the screen.\n      },\n    };\n\n    this.gridOptions = {\n\n      onCellValueChanged: function (event) {\n        //jeśli zmieniona wartość jest ok \n        console.log(\"onCellValueChanged\");\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json; charset=utf-8');\n        //this.baseUrl + \n        \n        http.put('api/ExternalGrid/' + event.data.id, JSON.stringify({ ID: event.data.id, Name: event.data.name, NodeNo: event.data.nodeNo, NodeType: event.data.nodeType, VoltageAngle: event.data.voltageAngle, VoltageSetpoint: event.data.voltageSetpoint, ActivePower: event.data.activePower, ReactivePower: event.data.reactivePower, ProjectId: projectIdInside }), { headers: headers }).subscribe();\n      },\n\n\n      onCellEditingStopped: () => {\n        console.log(\"onCellEditingStopped\");\n      },\n      onRowDataChanged: () => {\n        console.log(\"onRowDataChanged\");\n      },\n      singleClickEdit: false,\n      stopEditingWhenGridLosesFocus: true,\n\n      enableSorting: true,\n      enableFilter: true,\n      enableColResize: true,\n      animateRows: true,\n      rowSelection: 'multiple',\n      columnDefs: [\n        // put the three columns into a group\n        {\n          headerName: 'Load flow data',\n          children: [\n            { headerName: \"Name\", field: \"name\", width: 110 },\n            {\n              headerName: \"Type of node\", field: \"nodeType\", width: 100, cellEditor: 'select',\n              cellEditorParams: {\n                values: [\n                  \"SL\",\n                  \"PV\",\n                  \"PQ\"\n                ]\n              }\n            },\n            { headerName: \"No. of node\", hide: true, field: \"nodeNo\", width: 100, type: \"numericColumn\" },\n            {\n              headerName: \"Voltage angle [deg]\", field: \"voltageAngle\", type: \"numericColumn\",\n              valueFormatter: this.numberValueFormatter,\n              valueSetter: this.numberValueSetter\n            },\n            {\n              headerName: \"Voltage setpoint [p.u.]\", field: \"voltageSetpoint\", width: 170, type: \"numericColumn\", cellEditor: \"text\",\n              valueFormatter: this.numberValueFormatter,\n              valueSetter: this.numberValueSetter\n            },\n            {\n              headerName: \"Active power [MW]\", field: \"activePower\", type: \"numericColumn\",\n              valueFormatter: this.numberValueFormatter,\n              valueSetter: this.numberValueSetter\n            },\n            {\n              headerName: \"Reactive power [MVAr]\", field: \"reactivePower\", width: 170, type: \"numericColumn\",\n              valueFormatter: this.numberValueFormatter,\n              valueSetter: this.numberValueSetter\n            }\n          ]\n        }\n      ],\n      defaultColDef: {\n        //enableCellChangeFlash: true,\n        // set every column width\n        width: 150,\n        // make every column editable\n        editable: true,\n        // make every column use 'text' filter by default\n        filter: 'text'\n      },\n    }\n\n    //wczytaj dane z bazy danych bazując na nazwie projektu\n   \n    http.get('api/ExternalGrid/GetBasedOnProject/' + this.projectId).subscribe(\n      result => { this.rowData = result.json(); console.log('this.rowData:' + this.rowData) },\n    );\n\n\n    /*\n    this.http.get('api/ExternalGrid/Get').subscribe(\n      result => { this.rowData = result.json(); },      \n    ); */\n\n  }\n\n  \n\n  ngOnInit() {\n\n    //gdy wstawiam tutaj dane z konstruktora mam problem z http.put - this. ...\n\n\n  }\n\n  //sprawdzanie czy wprowadzona liczba do tabeli jest liczbą\n  numberValueFormatter(params) {\n    if (isNaN(Number(params.value))) {\n      return \"\";\n    } else {\n      return params.value;\n    }\n  }\n  //ustawienie wartości jeśli jest liczbą\n  numberValueSetter(params) {\n    if (isNaN(parseFloat(params.newValue)) || !isFinite(params.newValue)) {\n      alert(\"It must be a number\");\n      return false; // don't set invalid numbers!\n    }\n\n    if (params.colDef.field == \"voltageAngle\") {\n      params.data.voltageAngle = params.newValue;\n    }\n    if (params.colDef.field == \"voltageSetpoint\") {\n      params.data.voltageSetpoint = params.newValue;\n    }\n    if (params.colDef.field == \"activePower\") {\n      params.data.activePower = params.newValue;\n    }\n    if (params.colDef.field == \"reactivePower\") {\n      params.data.reactivePower = params.newValue;\n    }\n    return true;\n    //w bazie danych SQL dane są aktualizowane w onCellValueChanged  \n  }\n\n  //zaktualizowanie tabeli\n  printResult(res) {\n    console.log('---------------------------------------')\n    if (res.add) {\n      res.add.forEach(function (rowNode) {\n\n        console.log('Added Row Node', rowNode);\n      });\n    }\n    if (res.remove) {\n      res.remove.forEach(function (rowNode) {\n        console.log('Removed Row Node', rowNode);\n      });\n    }\n    if (res.update) {\n      res.update.forEach(function (rowNode) {\n        console.log('Updated Row Node', rowNode);\n      });\n    }\n  }\n\n\n  removeSelected() {\n\n    if (window.confirm('Are you sure you want to delete?')) {\n      //front-end\n      var selectedData = this.gridOptions.api.getSelectedRows();\n\n      let rowIdArray: number[] = [];\n      this.gridOptions.api.forEachNode(function (node) {\n\n        if (node.isSelected()) {\n          rowIdArray.push(node.data.id);\n        }\n      });\n\n      var res = this.gridOptions.api.updateRowData({ remove: selectedData });\n      this.printResult(res);\n      //back-end\n      var headers = new Headers();\n      headers.append('Content-Type', 'application/json; charset=utf-8');\n      for (var rowId = 0; rowId < rowIdArray.length; rowId++) {\n        this.http.delete('api/ExternalGrid/' + rowIdArray[rowId], { headers: headers }).subscribe();\n      }\n    } else { }\n  }\n\n  onAddRow() {\n\n    var newItem = {\n      //id: 0,\n      name: \"External Grid\",\n      nodeNo: 0,\n      nodeType: \"SL\",\n      voltageAngle: 0,\n      voltageSetpoint: 0,\n      activePower: 0,\n      reactivePower: 0,\n      //projectId: 2\n\n    };\n    var headers = new Headers();\n    headers.append('Content-Type', 'application/json; charset=utf-8');\n    this.http.post('api/ExternalGrid', JSON.stringify({ ID: 0, Name: newItem.name, NodeNo: newItem.nodeNo, NodeType: newItem.nodeType, VoltageAngle: newItem.voltageAngle, VoltageSetpoint: newItem.voltageSetpoint, ActivePower: newItem.activePower, ReactivePower: newItem.reactivePower, ProjectId: this.projectId }), { headers: headers }).subscribe((data: Object) => {\n      //Czekamy na wykonanie sie POST, zeby zrobic GET i WPISAC dane do tabeli we front end\n\n      // po operacji post ustawiany jest specyficzny ID w bazie SQL, aby dany wiersz w front-end miał taki sam ID, musze sciagnac te dane do frontendu    \n      /*this.http.get('api/ExternalGrid/Get').subscribe(result => {\n        this.rowData = result.json();\n      })*/\n\n      this.http.get('api/ExternalGrid/GetBasedOnProject/' + this.projectId).subscribe(\n        result => { this.rowData = result.json(); },\n      );\n\n      var res = this.gridOptions.api.updateRowData({ add: [newItem] });\n      this.printResult(res);\n    });\n  }\n}\n\nexport interface ExternalGrids {\n  id: number;\n  name: string;\n  nodeNo: number;\n  nodeType: string;\n  voltageAngle: number;\n  voltageSetpoint: number;\n  activePower: number;\n  reactivePower: number;\n  projectId: number\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/VScode/lite/src/app/+data/externalgrids/externalgrids.component.ts","import { NgModule, Injectable } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpModule } from '@angular/http';\n\nimport { ExternalGridsRoutingModule } from './externalgrids-routing.module';\nimport { ExternalGridsComponent } from \"app/+data/externalgrids/externalgrids.component\";\nimport {SmartadminModule} from \"app/shared/smartadmin.module\";\n\nimport {AgGridModule} from 'ag-grid-angular/main';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpModule,\n    SmartadminModule,\n    AgGridModule.withComponents([]),\n    ExternalGridsRoutingModule\n    \n  ],\n  declarations: [\n    ExternalGridsComponent\n  ],\n  providers: [\n    { provide: 'BASE_URL', useFactory: getBaseUrl }\n  ] \n})\nexport class ExternalGridsModule { }\n\nexport function getBaseUrl() {\n  return document.getElementsByTagName('base')[0].href;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/VScode/lite/src/app/+data/externalgrids/externalgrids.module.ts","/**\n * Created by griga on 12/26/16.\n */\n\nimport {fadeInTop} from \"./router.animations\";\n\nexport function FadeInTop() {\n  var __ref__ = window['Reflect']\n\n  function parseMeta(metaInformation) {\n    for (var _i = 0,\n           metaInformation_1 = metaInformation;\n         _i < metaInformation_1.length; _i++) {\n\n      var metadata = metaInformation_1[_i]; //metadata is @Component metadata\n\n\n      // metadata.animations = [fadeInTop()];\n      // metadata.host = {\"[@fadeInTop]\": ''};\n      //your logic here\n      // mine was metadata.styles = [builtStyles]\n    }\n  }\n\n  //value represents the annotation parameter(s)\n  return function (target) {\n    var metaInformation = __ref__.getOwnMetadata('annotations', target);\n    if (metaInformation) {\n      parseMeta(metaInformation);\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/VScode/lite/src/app/shared/animations/fade-in-top.decorator.ts"],"sourceRoot":"webpack:///"}