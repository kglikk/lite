{"version":3,"sources":["./src/app/+calculation/loadflow/loadflow-routing.module.ts","./src/app/+calculation/loadflow/loadflow.component.html","./src/app/+calculation/loadflow/loadflow.component.ts","./src/app/+calculation/loadflow/loadflow.module.ts"],"names":[],"mappings":"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","file":"5.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoadFlowComponent } from \"app/+calculation/loadflow/loadflow.component\";\n\nconst routes: Routes = [{\n  path: '',\n  component: LoadFlowComponent,\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoadFlowRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/+calculation/loadflow/loadflow-routing.module.ts","module.exports = \"<!-- MAIN CONTENT -->\\n<div id=\\\"content\\\">\\n\\n  <div class=\\\"row\\\">\\n    <sa-big-breadcrumbs [items]=\\\"['Data', 'Load Flow']\\\" icon=\\\"table\\\" class=\\\"col-xs-12 col-sm-7 col-md-7 col-lg-4\\\"></sa-big-breadcrumbs>\\n    <!-- <sa-stats></sa-stats> -->\\n  </div>\\n \\n\\n  <!-- widget grid -->\\n  <sa-widgets-grid>\\n\\n\\n    <div class=\\\"row\\\">\\n      <article class=\\\"col-sm-12\\\">\\n        <sa-widget [editbutton]=\\\"false\\\" color=\\\"darken\\\">\\n          <header>\\n            <span class=\\\"widget-icon\\\">\\n              <i class=\\\"fa fa-table\\\"></i>\\n            </span>\\n\\n            <h2>Load Flow results</h2>\\n          </header>\\n          <div>\\n            <div class=\\\"widget-body no-padding\\\">\\n              <!-- <alert type=\\\"info\\\" class=\\\"no-margin fade in\\\" dismisser=\\\"\\\"> \\n                <i class=\\\"fa-fw fa fa-info\\\"></i>\\n                Adds zebra-striping to table row within <code>&lt;table&gt;</code> by adding the <code>.table-striped</code>\\n                with the base class\\n              </alert>\\n              -->\\n              <div class=\\\"table-responsive\\\" style=\\\"width: 100%; height: 500px;\\\">\\n                  <ag-grid-angular #agGrid style=\\\"width: 100%;height: 100%;\\\" class=\\\"ag-fresh\\\" [gridOptions]=\\\"gridOptions\\\" [rowData]=\\\"rowData\\\"> \\n                    <!--  [columnDefs]=\\\"columnDefs\\\" [defaultColDef]=\\\"defaultColDef\\\" -->\\n              </ag-grid-angular>\\n\\n               \\n\\n              </div>\\n\\n            </div>\\n          </div>\\n        </sa-widget>\\n\\n      </article>\\n\\n\\n    </div>\\n  \\n  </sa-widgets-grid>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/+calculation/loadflow/loadflow.component.html\n// module id = ./src/app/+calculation/loadflow/loadflow.component.html\n// module chunks = 5","import { Component, Inject } from '@angular/core';\nimport { Http, Headers } from \"@angular/http\";\nimport { GridOptions } from \"ag-grid/main\";\n\n\n@Component({    \n    templateUrl: './loadflow.component.html'\n})\n\n\nexport class LoadFlowComponent {\n    public loadflow: LoadFlow[] = [];\n\n    gridOptions: GridOptions;\n    rowData: any[];\n\n    \n    constructor(http: Http, @Inject('BASE_URL') baseUrl: string) {\n         // we pass an empty gridOptions in, so we can grab the api out\n        this.gridOptions = <GridOptions>{\n            onGridReady: () => {\n                this.gridOptions.api.sizeColumnsToFit(); //make the currently visible columns fit the screen.\n            },\n        };\n\n        this.gridOptions = {           \n           // singleClickEdit: false,\n            stopEditingWhenGridLosesFocus: true,\n\n            enableSorting: true,\n            enableFilter: true,\n            enableColResize: true,\n            animateRows: true,\n            rowSelection: 'multiple',\n            columnDefs: [\n                // put the three columns into a group\n                {\n                    headerName: 'Load flow data',\n                    children: [\n                        \n                        {\n                            headerName: \"Bus no.\", field: \"busNo\", type: \"numericColumn\"                           \n                        },\n                        {\n                            headerName: \"Voltage [kV]\", field: \"resultU\", type: \"numericColumn\",\n                            \n                        },\n                        {\n                            headerName: \"Angle [degrees]\", field: \"resultSigma\", type: \"numericColumn\",\n                           \n                        }\n                        \n                    ]\n                }\n            ],\n            defaultColDef: {\n                //enableCellChangeFlash: true,\n                // set every column width\n                width: 150,\n                // make every column editable\n                //editable: true,\n                // make every column use 'text' filter by default\n                filter: 'text'\n            },\n        }\n\n        \n        \n        http.get(baseUrl + 'api/LoadFlowController/LoadFlow').subscribe(result => {\n            this.rowData = result.json(); //as LoadFlow[]\n        }); //, error => console.error(error)\n    }\n\n}\n\ninterface LoadFlow {\n   \n    busNo: number;\n    resultU: number;\n    resultSigma: number; \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/+calculation/loadflow/loadflow.component.ts","import { NgModule, Injectable } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpModule } from '@angular/http';\n\nimport { LoadFlowRoutingModule } from './loadflow-routing.module';\nimport { LoadFlowComponent } from \"app/+calculation/loadflow/loadflow.component\";\nimport {SmartadminModule} from \"app/shared/smartadmin.module\";\n\nimport {AgGridModule} from 'ag-grid-angular/main';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpModule,\n    SmartadminModule,\n    AgGridModule.withComponents([]),\n    LoadFlowRoutingModule\n    \n  ],\n  declarations: [\n    LoadFlowComponent\n  ],\n  providers: [\n    { provide: 'BASE_URL', useFactory: getBaseUrl }\n  ] \n})\nexport class LoadFlowModule { }\n\nexport function getBaseUrl() {\n  return document.getElementsByTagName('base')[0].href;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/+calculation/loadflow/loadflow.module.ts"],"sourceRoot":"webpack:///"}