{"version":3,"sources":["./src/app/+data/overheadlines/overheadlines-routing.module.ts","./src/app/+data/overheadlines/overheadlines.component.html","./src/app/+data/overheadlines/overheadlines.component.ts","./src/app/+data/overheadlines/overheadlines.module.ts"],"names":[],"mappings":"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","file":"4.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OverheadLinesComponent } from \"app/+data/overheadlines/overheadlines.component\";\n\nconst routes: Routes = [{\n  path: '',\n  component: OverheadLinesComponent,\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OverheadLinesRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/+data/overheadlines/overheadlines-routing.module.ts","module.exports = \"<!-- MAIN CONTENT -->\\n<div id=\\\"content\\\">\\n\\n  <div class=\\\"row\\\">\\n    <sa-big-breadcrumbs [items]=\\\"['Data', 'Overhead Lines']\\\" icon=\\\"table\\\" class=\\\"col-xs-12 col-sm-7 col-md-7 col-lg-4\\\"></sa-big-breadcrumbs>\\n    <!-- <sa-stats></sa-stats> -->\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class='col-sm-12' style=\\\"margin-top: 10px; margin-bottom: 10px\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=onAddRow()>Add Row</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=removeSelected()>Delete selected</button>\\n    </div>\\n  </div>\\n  <!-- widget grid -->\\n  <sa-widgets-grid>\\n\\n\\n    <div class=\\\"row\\\">\\n      <article class=\\\"col-sm-12\\\">\\n        <sa-widget [editbutton]=\\\"false\\\" color=\\\"darken\\\">\\n          <header>\\n            <span class=\\\"widget-icon\\\">\\n              <i class=\\\"fa fa-table\\\"></i>\\n            </span>\\n\\n            <h2>Overhead Lines</h2>\\n          </header>\\n          <div>\\n            <div class=\\\"widget-body no-padding\\\">\\n              <!-- <alert type=\\\"info\\\" class=\\\"no-margin fade in\\\" dismisser=\\\"\\\"> \\n                <i class=\\\"fa-fw fa fa-info\\\"></i>\\n                Adds zebra-striping to table row within <code>&lt;table&gt;</code> by adding the <code>.table-striped</code>\\n                with the base class\\n              </alert>\\n              -->\\n              <div class=\\\"table-responsive\\\" style=\\\"width: 100%; height: 500px;\\\">\\n                  <ag-grid-angular #agGrid style=\\\"width: 100%;height: 100%;\\\" class=\\\"ag-fresh\\\" [gridOptions]=\\\"gridOptions\\\" [rowData]=\\\"rowData\\\"> \\n                    <!--  [columnDefs]=\\\"columnDefs\\\" [defaultColDef]=\\\"defaultColDef\\\" -->\\n              </ag-grid-angular>\\n\\n               \\n\\n              </div>\\n\\n            </div>\\n          </div>\\n        </sa-widget>\\n\\n      </article>\\n\\n\\n    </div>\\n  \\n  </sa-widgets-grid>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/+data/overheadlines/overheadlines.component.html\n// module id = ./src/app/+data/overheadlines/overheadlines.component.html\n// module chunks = 4","import { Component, Inject } from '@angular/core';\nimport { Http, Headers } from \"@angular/http\";\nimport { GridOptions } from \"ag-grid/main\";\n\n@Component({\n    templateUrl: './overheadlines.component.html'\n})\n\nexport class OverheadLinesComponent {\n    public overheadline: OverheadLines[] = [];\n\n    gridOptions: GridOptions;\n    rowData: any[];\n\n    constructor(public http: Http, @Inject('BASE_URL') baseUrl: string) {\n        // we pass an empty gridOptions in, so we can grab the api out\n        this.gridOptions = <GridOptions>{\n            onGridReady: () => {\n                this.gridOptions.api.sizeColumnsToFit(); //make the currently visible columns fit the screen.\n            },\n        };\n\n        this.gridOptions = {\n            onCellValueChanged: function (event) {\n                //jeśli zmieniona wartość jest ok \n                console.log(\"onCellValueChanged\");\n                var headers = new Headers();\n                headers.append('Content-Type', 'application/json; charset=utf-8');\n                http.put(baseUrl + 'api/OverheadLine/' + event.data.id, JSON.stringify({ ID: event.data.id, Name: event.data.name, StartNodeNo: event.data.startNodeNo, EndNodeNo: event.data.endNodeNo, Length: event.data.length, UnitaryResistance: event.data.unitaryResistance, UnitaryReactance: event.data.unitaryReactance, UnitaryCapacitance: event.data.unitaryCapacitance }), { headers: headers }).subscribe();\n            },\n            onCellEditingStopped: () => {\n                console.log(\"onCellEditingStopped\");\n            },\n            onRowDataChanged: () => {\n                console.log(\"onRowDataChanged\");\n            },\n            singleClickEdit: false,\n            stopEditingWhenGridLosesFocus: true,\n\n            enableSorting: true,\n            enableFilter: true,\n            enableColResize: true,\n            animateRows: true,\n            rowSelection: 'multiple',\n            columnDefs: [\n                // put the three columns into a group\n                {\n                    headerName: 'Load flow data',\n                    children: [\n                        { headerName: \"Name\", field: \"name\", width: 110 },\n                        {\n                            headerName: \"Start node no.\", field: \"startNodeNo\", type: \"numericColumn\",\n                            valueFormatter: this.numberValueFormatter,\n                            valueSetter: this.numberValueSetter\n                        },\n                        {\n                            headerName: \"End node no.\", field: \"endNodeNo\", type: \"numericColumn\",\n                            valueFormatter: this.numberValueFormatter,\n                            valueSetter: this.numberValueSetter\n                        },\n                        {\n                            headerName: \"Length [km]\", field: \"length\", type: \"numericColumn\",\n                            valueFormatter: this.numberValueFormatter,\n                            valueSetter: this.numberValueSetter\n                        },\n                        {\n                            headerName: \"Unitary Resistance [Ω/km]\", field: \"unitaryResistance\", type: \"numericColumn\",\n                            valueFormatter: this.numberValueFormatter,\n                            valueSetter: this.numberValueSetter\n                        },\n                        {\n                            headerName: \"Unitary Reactance [Ω/km]\", field: \"unitaryReactance\", type: \"numericColumn\",\n                            valueFormatter: this.numberValueFormatter,\n                            valueSetter: this.numberValueSetter\n                        },\n                        {\n                            headerName: \"Unitary Capacitance [uS/km]\", field: \"unitaryCapacitance\", type: \"numericColumn\",\n                            valueFormatter: this.numberValueFormatter,\n                            valueSetter: this.numberValueSetter\n                        }\n                    ]\n                }\n            ],\n            defaultColDef: {\n                //enableCellChangeFlash: true,\n                // set every column width\n                width: 150,\n                // make every column editable\n                editable: true,\n                // make every column use 'text' filter by default\n                filter: 'text'\n            },\n        }\n\n        //wczytaj dane z bazy danych\n        this.http.get(baseUrl + 'api/OverheadLine/Get').subscribe(result => {\n            this.rowData = result.json();\n        });\n    }\n\n\n    //sprawdzanie czy wprowadzona liczba do tabeli jest liczbą\n    numberValueFormatter(params) {\n        if (isNaN(Number(params.value))) {\n            return \"\";\n        } else {\n            return params.value;\n        }\n    }\n    //ustawienie wartości jeśli jest liczbą\n    numberValueSetter(params) {\n        if (isNaN(parseFloat(params.newValue)) || !isFinite(params.newValue)) {\n            alert(\"It must be a number\");\n            return false; // don't set invalid numbers!\n        }\n\n        if (params.colDef.field == \"startNodeNo\") {\n            params.data.startNodeNo = params.newValue;\n        }\n        if (params.colDef.field == \"endNodeNo\") {\n            params.data.endNodeNo = params.newValue;\n        }\n        if (params.colDef.field == \"length\") {\n            params.data.length = params.newValue;\n        }\n        if (params.colDef.field == \"unitaryResistance\") {\n            params.data.unitaryResistance = params.newValue;\n        }\n        if (params.colDef.field == \"unitaryReactance\") {\n            params.data.unitaryReactance = params.newValue;\n        }\n        if (params.colDef.field == \"unitaryCapacitance\") {\n            params.data.unitaryCapacitance = params.newValue;\n        }\n        return true;\n        //w bazie danych SQL dane są aktualizowane w onCellValueChanged  \n    }\n\n    //zaktualizowanie tabeli\n    printResult(res) {\n        console.log('---------------------------------------')\n        if (res.add) {\n            res.add.forEach(function (rowNode) {\n\n                console.log('Added Row Node', rowNode);\n            });\n        }\n        if (res.remove) {\n            res.remove.forEach(function (rowNode) {\n                console.log('Removed Row Node', rowNode);\n            });\n        }\n        if (res.update) {\n            res.update.forEach(function (rowNode) {\n                console.log('Updated Row Node', rowNode);\n            });\n        }\n    }\n\n    removeSelected() {\n\n        if (window.confirm('Are you sure you want to delete?')) {\n            //front-end\n            var selectedData = this.gridOptions.api.getSelectedRows();\n\n            let rowIdArray: number[] = [];\n            this.gridOptions.api.forEachNode(function (node) {\n\n                if (node.isSelected()) {\n                    rowIdArray.push(node.data.id);\n                }\n            });\n\n            var res = this.gridOptions.api.updateRowData({ remove: selectedData });\n            this.printResult(res);\n            //back-end\n            var headers = new Headers();\n            headers.append('Content-Type', 'application/json; charset=utf-8');\n            for (var rowId = 0; rowId < rowIdArray.length; rowId++) {\n                this.http.delete('api/OverheadLine/' + rowIdArray[rowId], { headers: headers }).subscribe();\n            }\n        } else { }\n    }\n\n    onAddRow() {\n\n        var newItem = {\n            //id: 0,\n            name: \"Overhead Line\",\n            startNodeNo: 0,\n            endNodeNo: 0,\n            length: 0,\n            unitaryResistance: 0,\n            unitaryReactance: 0,\n            unitaryCapacitance: 0,\n        };\n        var headers = new Headers();\n        headers.append('Content-Type', 'application/json; charset=utf-8');\n        this.http.post('api/OverheadLine', JSON.stringify({ ID: 0, Name: newItem.name, StartNodeNo: newItem.startNodeNo, EndNodeNo: newItem.endNodeNo, Length: newItem.length, UnitaryResistance: newItem.unitaryResistance, UnitaryReactance: newItem.unitaryReactance, UnitaryCapacitance: newItem.unitaryCapacitance }), { headers: headers }).subscribe((data: Object) => {\n            //Czekamy na wykonanie sie POST, zeby zrobic GET i WPISAC dane do tabeli we front end\n\n            // po operacji post ustawiany jest specyficzny ID w bazie SQL, aby dany wiersz w fron-end miał taki sam ID, musze sciagnac te dane do frontendu    \n            this.http.get('api/OverheadLine/Get').subscribe(result => {\n                this.rowData = result.json();\n            })\n\n            var res = this.gridOptions.api.updateRowData({ add: [newItem] });\n            this.printResult(res);\n        },\n        );\n    }\n}\n\nexport interface OverheadLines {\n    id: number;\n    name: string;\n    startNodeNo: number;\n    endNodeNo: number;\n    length: number;\n    unitaryResistance: number;\n    unitaryReactance: number;\n    unitaryCapacitance: number;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/+data/overheadlines/overheadlines.component.ts","import { NgModule, Injectable } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpModule } from '@angular/http';\n\nimport { OverheadLinesRoutingModule } from './overheadlines-routing.module';\nimport { OverheadLinesComponent } from \"app/+data/overheadlines/overheadlines.component\";\nimport {SmartadminModule} from \"app/shared/smartadmin.module\";\n\nimport {AgGridModule} from 'ag-grid-angular/main';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpModule,\n    SmartadminModule,\n    AgGridModule.withComponents([]),\n    OverheadLinesRoutingModule\n    \n  ],\n  declarations: [\n    OverheadLinesComponent\n  ],\n  providers: [\n    { provide: 'BASE_URL', useFactory: getBaseUrl }\n  ] \n})\nexport class OverheadLinesModule { }\n\nexport function getBaseUrl() {\n  return document.getElementsByTagName('base')[0].href;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/+data/overheadlines/overheadlines.module.ts"],"sourceRoot":"webpack:///"}